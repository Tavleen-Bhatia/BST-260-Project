---
title: "Q2 - Deaths rates during waves"
format: html
editor: visual
---

```{r}
library(dplyr)
library(tidyverse)
library(lubridate)
library(ggrepel)
```

```{r}
dat <- readRDS('../data/dat.rds')
```

This documents makes various plots to see death rates during COVID-19 waves. The following waves are:

-   Wave 1: April 2020 - June 2020

-   Wave 2: October 2020 - March 2021

-   Wave 3: August 2021 - November 2021

-   Wave 4: January 2022 - March 2022

For the final paper, we can pick and choose which states/regions to look at in order to tell a story. The rest of the graphs can go into an appendix.

```{r}
dat |>
  select(date, population, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  mutate(rate = (values / population) * 100000,
         region = as.factor(region)) |>
  filter(date >= make_date(2020, 3, 15) & date <= make_date(2020, 6, 1)) |>
  ggplot(aes(x = date, y = rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_grid(type ~ region, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 1: Rates of COVID deaths, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.position="none")
```

```{r}
dat |>
  select(date, population, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  mutate(rate = (values / population) * 100000,
         region = as.factor(region)) |>
  filter(date >= make_date(2020, 9, 1) & date <= make_date(2021, 4, 1)) |>
  ggplot(aes(x = date, y = rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_grid(type ~ region, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 2: Rates of COVID deaths, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.position="none")
```

```{r}
dat |>
  select(date, population, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  mutate(rate = (values / population) * 100000,
         region = as.factor(region)) |>
  filter(date >= make_date(2021, 7, 1) & date <= make_date(2021, 12, 31)) |>
  ggplot(aes(x = date, y = rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_grid(type ~ region, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 3: Rates of COVID deaths, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.position="none")
```

```{r}
dat |>
  select(date, population, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  mutate(rate = (values / population) * 100000,
         region = as.factor(region)) |>
  filter(date >= make_date(2021, 12, 1) & date <= make_date(2022, 3, 31)) |>
  ggplot(aes(x = date, y = rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_grid(type ~ region, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 4: Rates of COVID deaths, & total deaths in U.S.',
       color = 'State') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.key.size = unit(0.25, 'cm'))
```
