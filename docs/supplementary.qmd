---
title: "Supplmentary_Info"
format: html
editor: visual
---

# Supplementary Information

## Figure 1 - Depicts population for each state from 2020-2023

```{r echo=FALSE, include=FALSE}
library(httr2)
library(tidyverse)
library(janitor)
library(jsonlite)
library(purrr)
library(lubridate)
library(tibble)

# reading in csv
# if running code in code directory, make sure to add ..
# if running in home directory, just start with data/
population <- read.csv('../raw-data/NST-EST2023-ALLDATA.csv')

# data wrangling population dataframe
population <- population |>
  filter(STATE != 0) |>
  select(c(NAME, POPESTIMATE2020, 
           POPESTIMATE2021, POPESTIMATE2022, POPESTIMATE2023)) |>
  rename(state_name = NAME,
         `2020` = POPESTIMATE2020,
         `2021` = POPESTIMATE2021,
         `2022` = POPESTIMATE2022,
         `2023` = POPESTIMATE2023)
```

```{r echo=FALSE}
# creates graph to show if population for each state changes drastically overtime,
# since we see that pop barely changes for each state, can extrapolate
## that 2024 will just be average of pop from 2020-2023
population |>
  pivot_longer(-(state_name),
               names_to = 'year',
               values_to = 'population') |>
  mutate(year = parse_number(year)) |>
  ggplot(aes(x = year, y = population, color = state_name)) +
  geom_line() +
  theme(legend.key.size = unit(0.25, 'cm'))
```

## Figure 2 - Finding COVID-19 waves

```{r echo=FALSE}
# loading in data
dat <- readRDS('../data/dat.rds')
```

```{r echo=FALSE}
dat |>
  select(date, population, cases, hosp, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(cases, hosp, 
                 covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  mutate(rate = (values / population) * 100000) |> # calcs rate
  ggplot(aes(x = date, y = rate, color = region_name)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_wrap(~ type, nrow = 4, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Rates of COVID cases, hospitalizations, COVID deaths, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6)) 
```

### Figure 2a - Zooming in on wave 1 to see if it is actually a wave

```{r echo=FALSE}
dat |>
  select(date, population, cases, hosp, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(cases, hosp, 
                 covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  filter(date >= make_date(2020, 3, 15) & date <= make_date(2020, 6, 1)) |> # filters for specific wave
  mutate(rate = (values / population) * 100000) |> # calcs rate
  ggplot(aes(x = date, y = rate, color = region_name)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_wrap(~ type, nrow = 4, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 1 Rates of COVID cases/deaths, hospitalizations, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6)) 
```

### Figure 2b - Zooming in on wave 2 to see if it is actually a wave

```{r echo=FALSE}
dat |>
  select(date, population, cases, hosp, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(cases, hosp, 
                 covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  filter(date >= make_date(2020, 9, 1) & date <= make_date(2021, 4, 1)) |> # filters for specific wave
  mutate(rate = (values / population) * 100000) |> # calcs rate
  ggplot(aes(x = date, y = rate, color = region_name)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_wrap(~ type, nrow = 4, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 2 Rates of COVID cases/deaths, hospitalizations, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6)) 
```

### Figure 2c - Zooming in on wave 3 to see if it is actually a wave

```{r echo=FALSE}
dat |>
  select(date, population, cases, hosp, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(cases, hosp, 
                 covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  filter(date >= make_date(2021, 7, 1) & date <= make_date(2021, 12, 31)) |> # filters for specific wave
  mutate(rate = (values / population) * 100000) |> # calcs rate
  ggplot(aes(x = date, y = rate, color = region_name)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_wrap(~ type, nrow = 4, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 3 Rates of COVID cases/deaths, hospitalizations, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6))
```

### Figure 2d - Zooming in on wave 4 to see if it is actually a wave

```{r echo=FALSE}
dat |>
  select(date, population, cases, hosp, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(cases, hosp, 
                 covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  filter(date >= make_date(2021, 12, 1) & date <= make_date(2022, 3, 31)) |> # filters for specific wave
  mutate(rate = (values / population) * 100000) |> # calcs rate
  ggplot(aes(x = date, y = rate, color = region_name)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_wrap(~ type, nrow = 4, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 4 Rates of COVID cases/deaths, hospitalizations, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6)) 
```

## Figure 3 - Deaths rates for each figure

```{r echo=FALSE}
dat <- readRDS('../data/dat.rds')
```

### 3a - Wave 1

```{r echo=FALSE}
dat |>
  select(date, population, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  mutate(rate = (values / population) * 100000,
         region = as.factor(region)) |>
  filter(date >= make_date(2020, 3, 15) & date <= make_date(2020, 6, 1)) |>
  ggplot(aes(x = date, y = rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_grid(type ~ region, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 1: Rates of COVID deaths, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.position="none")
```

### 3b - Wave 2

```{r echo=FALSE}
dat |>
  select(date, population, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  mutate(rate = (values / population) * 100000,
         region = as.factor(region)) |>
  filter(date >= make_date(2020, 9, 1) & date <= make_date(2021, 4, 1)) |>
  ggplot(aes(x = date, y = rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_grid(type ~ region, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 2: Rates of COVID deaths, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.position="none")
```

### 3c - Wave 3

```{r echo=FALSE}
dat |>
  select(date, population, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  mutate(rate = (values / population) * 100000,
         region = as.factor(region)) |>
  filter(date >= make_date(2021, 7, 1) & date <= make_date(2021, 12, 31)) |>
  ggplot(aes(x = date, y = rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_grid(type ~ region, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 3: Rates of COVID deaths, & total deaths in U.S.',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.position="none")
```

### 3d

```{r echo=FALSE}
dat |>
  select(date, population, 
         covid_deaths, total_deaths, region,
         region_name, state) |>
  pivot_longer(c(covid_deaths, total_deaths), # create col of type of rate, for facet wrapping
               names_to = 'type', 
               values_to = 'values') |> 
  mutate(rate = (values / population) * 100000,
         region = as.factor(region)) |>
  filter(date >= make_date(2021, 12, 1) & date <= make_date(2022, 3, 31)) |>
  ggplot(aes(x = date, y = rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_grid(type ~ region, scales = 'free_y') + # stack/scale axis
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 4: Rates of COVID deaths, & total deaths in U.S.',
       color = 'State') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.key.size = unit(0.25, 'cm'))
```

## Figure 4 - Virulence

```{r echo=FALSE}
dat <- readRDS('../data/dat.rds')
```

### 4a - Wave 1: individual states

```{r echo=FALSE}
dat |>
  select(date, population, cases,
         covid_deaths, total_deaths, region,
         region_name, state) |>
  filter(date >= make_date(2020, 3, 15) & date <= make_date(2020, 6, 1)) |>
  mutate(cases_rate = (cases / population) * 100000) |>
  ggplot(aes(x = date, y = cases_rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_wrap( ~ region_name, scales = 'free_y') + # stack/scale axis 
  labs(x = 'Time (Calendar Time)', 
       y = 'Cases Rate (per 100000)',
       title = 'Wave 1: COVID case rates in U.S. per state',
       color = 'State') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.key.size = unit(0.25, 'cm')) 
```

### 4b - Wave 1: By region

```{r echo=FALSE}
dat |>
  select(date, population, cases,
         covid_deaths, total_deaths, region,
         region_name, state) |>
  filter(date >= make_date(2020, 3, 15) & date <= make_date(2020, 6, 1)) |>
  group_by(date, region_name) |>
  reframe(date = date, 
          population = sum(population),
          cases = sum(cases)) |>
  distinct(.keep_all = TRUE) |>
  mutate(cases_rate = (cases / population) * 100000) |>
  ggplot(aes(x = date, y = cases_rate, color = region_name, group = region_name)) + 
  geom_line() + # creates smooth lines
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 1: Total COVID case rates in U.S. per region',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6)) 
```

### 4c - Wave 2: individual states

```{r echo=FALSE}
dat |>
  select(date, population, cases,
         covid_deaths, total_deaths, region,
         region_name, state) |>
  filter(date >= make_date(2020, 9, 1) & date <= make_date(2021, 4, 1)) |>
  mutate(cases_rate = (cases / population) * 100000) |>
  ggplot(aes(x = date, y = cases_rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_wrap( ~ region_name, scales = 'free_y') + # stack/scale axis 
  labs(x = 'Time (Calendar Time)', 
       y = 'Cases Rate (per 100000)',
       title = 'Wave 2: COVID case rates in U.S. per state',
       color = 'State') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6),
        legend.key.size = unit(0.25, 'cm')) 
```

### 4d - Wave 2: By region

```{r echo=FALSE}
dat |>
  select(date, population, cases,
         covid_deaths, total_deaths, region,
         region_name, state) |>
  filter(date >= make_date(2020, 9, 1) & date <= make_date(2021, 4, 1)) |>
  group_by(date, region_name) |>
  reframe(date = date, 
          population = sum(population),
          cases = sum(cases)) |>
  distinct(.keep_all = TRUE) |>
  mutate(cases_rate = (cases / population) * 100000) |>
  ggplot(aes(x = date, y = cases_rate, color = region_name, group = region_name)) + 
  geom_line() + # creates smooth lines
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 2: Total COVID case rates in U.S. per region',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6)) 
```

### 4e - Wave 3: individual states

```{r echo=FALSE}
dat |>
  select(date, population, cases,
         covid_deaths, total_deaths, region,
         region_name, state) |>
  filter(date >= make_date(2021, 7, 1) & date <= make_date(2021, 12, 31)) |>
  mutate(cases_rate = (cases / population) * 100000) |>
  ggplot(aes(x = date, y = cases_rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_wrap( ~ region_name, scales = 'free_y') + # stack/scale axis 
  labs(x = 'Time (Calendar Time)', 
       y = 'Cases Rate (per 100000)',
       title = 'Wave 3: COVID case rates in U.S. per state',
       color = 'State') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.key.size = unit(0.25, 'cm')) 
```

### 4f - Wave 3: by region

```{r echo=FALSE}
dat |>
  select(date, population, cases,
         covid_deaths, total_deaths, region,
         region_name, state) |>
  filter(date >= make_date(2021, 7, 1) & date <= make_date(2021, 12, 31)) |>
  group_by(date, region_name) |>
  reframe(date = date, 
          population = sum(population),
          cases = sum(cases)) |>
  distinct(.keep_all = TRUE) |>
  mutate(cases_rate = (cases / population) * 100000) |>
  ggplot(aes(x = date, y = cases_rate, color = region_name, group = region_name)) + 
  geom_line() + # creates smooth lines
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 3: Total COVID case rates in U.S. per region',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45))
```

### 4g - Wave 4: individual states

```{r echo=FALSE}
dat |>
  select(date, population, cases,
         covid_deaths, total_deaths, region,
         region_name, state) |>
  filter(date >= make_date(2021, 12, 1) & date <= make_date(2022, 3, 31)) |>
  mutate(cases_rate = (cases / population) * 100000) |>
  ggplot(aes(x = date, y = cases_rate, color = state)) + 
  geom_line(aes(group = state)) + # creates smooth lines
  facet_wrap( ~ region_name, scales = 'free_y') + # stack/scale axis 
  labs(x = 'Time (Calendar Time)', 
       y = 'Cases Rate (per 100000)',
       title = 'Wave 4: COVID case rates in U.S. per state',
       color = 'State') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6, angle = 45),
        legend.key.size = unit(0.25, 'cm')) 
```

### 4h - Wave 4: by region

```{r echo=FALSE}
dat |>
  select(date, population, cases,
         covid_deaths, total_deaths, region,
         region_name, state) |>
  filter(date >= make_date(2021, 12, 1) & date <= make_date(2022, 3, 31)) |>
  group_by(date, region_name) |>
  reframe(date = date, 
          population = sum(population),
          cases = sum(cases)) |>
  distinct(.keep_all = TRUE) |>
  mutate(cases_rate = (cases / population) * 100000) |>
  ggplot(aes(x = date, y = cases_rate, color = region_name, group = region_name)) + 
  geom_line() + # creates smooth lines
  labs(x = 'Time (Calendar Time)', 
       y = 'Rates (per 100000)',
       title = 'Wave 4: Total COVID case rates in U.S. per region',
       color = 'Region') + 
  theme(axis.text.x = element_text(vjust = 0.75, size = 6)) 
```
